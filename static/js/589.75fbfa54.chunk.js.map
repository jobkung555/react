{"version":3,"file":"static/js/589.75fbfa54.chunk.js","mappings":"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","sources":["pages/Phone/components/Phone/index.js","pages/Phone/index.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useFrame, useLoader } from \"@react-three/fiber\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { Mesh } from \"three\";\r\nimport gsap from \"gsap\";\r\n\r\nexport function PhoneModel({...prop}) {\r\n  const gltf = useLoader(\r\n    GLTFLoader,\r\n    process.env.PUBLIC_URL + \"models/Phone/phone.gltf\"\r\n  );\r\n  \r\n  useEffect(() => {\r\n    // gltf.scene.scale.set(0.005, 0.005, 0.005);\r\n    gltf.scene.position.set(0, 2.5, 0);\r\n    gltf.materials.Case.color.set(prop.color)\r\n    gltf.scene.traverse((object) => {\r\n      if (object instanceof Mesh) {\r\n        object.castShadow = true;\r\n        object.receiveShadow = true;\r\n        object.material.envMapIntensity = 20;\r\n      }\r\n    });\r\n    \r\n    // gltf.scene.children[0].position.set(0, 5, 0);\r\n    // gltf.scene.children[1].position.set(0, 5, 0);\r\n    // gltf.scene.children[2].position.set(0, 5, 0);\r\n    // gltf.scene.children[3].position.set(0, 5, 0);\r\n    // gltf.scene.children[4].position.set(0, -5, 0);\r\n\r\n    // gsap.to(gltf.scene.children[4].rotation, { duration: 2, x: -2, stagger: 0.3 })\r\n      // gsap.timeline({ repeat: -1 })\r\n      // .to(gltf.scene.children[4].position, { duration: 2, y: -2, stagger: 0.3 })\r\n      // .to(gltf.scene.children[4].position, { duration: 2, y: 0, stagger: 0.3 })\r\n\r\n  }, [gltf,prop]);\r\n\r\n  useFrame((state, delta) => {\r\n    let t = state.clock.getElapsedTime();\r\n  });\r\n\r\n  return <primitive object={gltf.scene} />;\r\n}\r\n","import React, { useEffect, Suspense, useState, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { Canvas, useFrame } from '@react-three/fiber'\r\nimport { Stars } from '@react-three/drei'\r\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei/core'\r\nimport gsap from 'gsap'\r\n// import PhoneModel from '../../assets/three/models/Phone/phone.gltf'\r\n\r\n// import img from '../../assets/three/textures/door/color.jpg'\r\n// import Phone from './components/Phone'\r\n\r\nimport { PhoneModel } from './components/Phone'\r\n\r\nconst Canvashidden = styled.div`\r\n  overflow: hidden;\r\n  display: flex;\r\n  /* background: #000; */\r\n`\r\n\r\nconst Menu = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  width: calc(100vw - 40px);\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  padding: 0 20px;\r\n`\r\nconst Btn = styled.button`\r\n  width: 100px;\r\n  aspect-ratio: 1;\r\n  border-radius: 100px;\r\n  border: 5px solid #444444;\r\n  background: ${prop => prop.color};\r\n  cursor: pointer;\r\n`\r\n\r\nconst MenuLeft = styled.div`\r\n  position: fixed;\r\n  top: 20px;\r\n  left: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  padding: 0 20px;\r\n`\r\n\r\nconst Secneall = ({ ...prop }) => {\r\n\r\n  useFrame((state, delta) => {\r\n    // let t = state.clock.getElapsedTime();\r\n  });\r\n  const cameraRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (!!cameraRef.current && prop.content == 1) {\r\n      gsap.to(cameraRef.current.rotation, {\r\n        y: Math.PI * 1,\r\n        duration: 2,\r\n        ease: 'easeOut'\r\n      })\r\n      gsap.to(cameraRef.current.position, {\r\n        z: -2,\r\n        y: 6,\r\n        duration: 2,\r\n        ease: 'easeOut'\r\n      })\r\n    } else if (!!cameraRef.current && prop.content == 0) {\r\n      gsap.to(cameraRef.current.rotation, {\r\n        y: 0,\r\n        duration: 2,\r\n        ease: 'easeOut'\r\n      })\r\n      gsap.to(cameraRef.current.position, {\r\n        z: 7,\r\n        y: 4.5,\r\n        duration: 2,\r\n        ease: 'easeOut'\r\n      })\r\n    }\r\n\r\n\r\n\r\n  }, [cameraRef.current, prop.content])\r\n  return (\r\n    <>\r\n      {/* <OrbitControls target={[0, 0.35, 0]} maxPolarAngle={1.45} /> */}\r\n      <PerspectiveCamera ref={cameraRef} makeDefault fov={50} position={[0, 4.5, 7]} rotation={[0, 0, 0]} />\r\n      {/* <PerspectiveCamera ref={cameraRef} makeDefault fov={50} position={[-0.5, 6, -2]} rotation={[0, Math.PI, 0]} /> */}\r\n      <color args={[2, 34, 34]} attach=\"background\" />\r\n      {/* <spotLight\r\n        color={[1, 0.25, 0.7]}\r\n        intensity={1.5}\r\n        angle={0.6}\r\n        penumbra={0.5}\r\n        position={[5, 5, 0]}\r\n        castShadow\r\n        shadow-bias={-0.0001}\r\n      /> */}\r\n      <spotLight\r\n        color={[1, 1, 1]}\r\n        intensity={1}\r\n        angle={0.6}\r\n        penumbra={0.5}\r\n        position={[-5, 15, 10]}\r\n        castShadow\r\n        shadow-bias={-0.0001}\r\n      />\r\n      {/* <rectAreaLight\r\n        width={3}\r\n        height={3}\r\n        color={'#FFFFFF'}\r\n        intensity={5.6}\r\n        position={[-2, 5, 5]}\r\n        lookAt={[0, 0, 0]}\r\n        penumbra={1}\r\n        castShadow\r\n      /> */}\r\n      {/* <pointLight position={[-5, 20, 10]} intensity={5.5} /> */}\r\n      <pointLight position={[5, 20, -10]} intensity={1.5} />\r\n      {/* <pointLight position={[5, 20, -10]} intensity={1.5}/> */}\r\n\r\n      <PhoneModel color={prop.color} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Phone = () => {\r\n  const [colorMaterial, setColorMaterial] = useState('#000000')\r\n  const [content, setContent] = useState(0)\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Canvashidden>\r\n        <Suspense fallback={null}>\r\n          <Canvas shadows style={{ width: '100vw', height: '100vh' }}>\r\n            <Secneall color={colorMaterial} content={content} />\r\n          </Canvas>\r\n        </Suspense>\r\n        <Menu>\r\n          <Btn color={'#000000'} onClick={() => setColorMaterial('#000000')}></Btn>\r\n          <Btn color={'#FF0000'} onClick={() => setColorMaterial('#FF0000')}></Btn>\r\n          <Btn color={'#00FF00'} onClick={() => setColorMaterial('#00FF00')}></Btn>\r\n          <Btn color={'#0000FF'} onClick={() => setColorMaterial('#0000FF')}></Btn>\r\n          <Btn color={'#FFFFFF'} onClick={() => setColorMaterial('#FFFFFF')}></Btn>\r\n        </Menu>\r\n        <MenuLeft>\r\n          <Btn onClick={() => setContent(0)}>Front</Btn>\r\n          <Btn onClick={() => setContent(1)}>Back</Btn>\r\n        </MenuLeft>\r\n      </Canvashidden>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Phone"],"names":["PhoneModel","prop","gltf","useLoader","GLTFLoader","process","useEffect","scene","position","set","materials","Case","color","traverse","object","Mesh","castShadow","receiveShadow","material","envMapIntensity","useFrame","state","delta","clock","getElapsedTime","Canvashidden","styled","Menu","Btn","MenuLeft","Secneall","cameraRef","useRef","current","content","gsap","rotation","y","Math","PI","duration","ease","z","PerspectiveCamera","ref","makeDefault","fov","args","attach","intensity","angle","penumbra","useState","colorMaterial","setColorMaterial","setContent","Suspense","fallback","shadows","style","width","height","onClick"],"sourceRoot":""}